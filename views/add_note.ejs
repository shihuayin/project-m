<!DOCTYPE html>
<html>
  <head>
    <title>Add a New Note</title>
    <link rel="stylesheet" type="text/css" href="/main.css" />

    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
    />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <style>
      @keyframes blink {
        0% {
          background-color: red;
        }
        50% {
          background-color: darkred;
        }
        100% {
          background-color: red;
        }
      }

      .blinking {
        animation: blink 1s infinite;
        color: white;
      }
    </style>
  </head>
  <body>
    <h1>Add a New Note</h1>

    <form action="/notes/add" method="post">
      <label for="title">Title:</label>
      <input type="text" name="title" required />
      <br />

      <label for="content">Content:</label>
      <textarea name="content" id="note-content" required></textarea>
      <button
        type="button"
        id="toggle-voice-input"
        style="background-color: white"
      >
        ðŸŽ¤ Start Voice Input
      </button>

      <br />

      <label for="category">Category:</label>
      <input type="text" name="category" required />
      <br />

      <label for="week">Week:</label>
      <select name="week" required>
        <% for (let i = 1; i <= 10; i++) { %>
        <option value="Week <%= i %>">Week <%= i %></option>
        <% } %>
      </select>
      <br />

      <!-- map location message part -->

      <label for="location_name">Location Name:</label>
      <input type="text" name="location_name" id="location_name" readonly />
      <br />
      <input type="hidden" name="latitude" id="latitude" />
      <input type="hidden" name="longitude" id="longitude" />

      <!--map picture -->
      <div id="map" style="height: 300px"></div>
      <br />

      <button type="submit">Create Note</button>
    </form>

    <script>
      //voice part
      const toggleVoiceInputButton =
        document.getElementById("toggle-voice-input");
      const noteContent = document.getElementById("note-content");

      if ("webkitSpeechRecognition" in window) {
        const recognition = new webkitSpeechRecognition();
        recognition.continuous = true;
        recognition.interimResults = false;
        recognition.lang = "en-US";

        let isRecording = false;

        toggleVoiceInputButton.addEventListener("click", () => {
          if (!isRecording) {
            // voice input
            recognition.start();
            isRecording = true;
            toggleVoiceInputButton.textContent = "ðŸ›‘ Stop Input";
            toggleVoiceInputButton.classList.add("blinking");
          } else {
            // voice stop
            recognition.stop();
            isRecording = false;
            toggleVoiceInputButton.textContent = "ðŸŽ¤ Start Voice Input";
            toggleVoiceInputButton.classList.remove("blinking");
          }
        });
        // deal with return result
        recognition.onresult = (event) => {
          const transcript = event.results[0][0].transcript;
          noteContent.value += " " + transcript;
        };

        //deal with error
        recognition.onerror = (event) => {
          console.error("Speech recognition error:", event.error);
          isRecording = false;
          toggleVoiceInputButton.textContent = "ðŸŽ¤ Start Voice Input";
          toggleVoiceInputButton.classList.remove("blinking");
        };

        //deal with ends
        recognition.onend = () => {
          isRecording = false;
          toggleVoiceInputButton.textContent = "ðŸŽ¤ Start Voice Input";
          toggleVoiceInputButton.classList.remove("blinking");
        };
      } else {
        // if browser do not support speech convert API
        toggleVoiceInputButton.disabled = true;
        alert("Speech Recognition API is not supported in this browser.");
      }

      // map part
      var map = L.map("map").setView([51.505, -0.09], 13);
      L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
        attribution:
          '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      }).addTo(map);

      var marker;

      // click listener
      map.on("click", function (e) {
        var lat = e.latlng.lat;
        var lng = e.latlng.lng;

        if (marker) {
          marker.setLatLng(e.latlng);
        } else {
          marker = L.marker(e.latlng).addTo(map);
        }

        // add lat and lng
        document.getElementById("latitude").value = lat;
        document.getElementById("longitude").value = lng;

        // use API get location
        fetch(
          `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${lng}&key=3751cf95103f4302aebe7afe503ea3f3&language=en`
        )
          .then((response) => response.json())
          .then((data) => {
            if (data && data.results && data.results.length > 0) {
              const locationName = data.results[0].formatted;
              document.getElementById("location_name").value = locationName;
            }
          })
          .catch((error) => {
            console.error("Error fetching location name:", error);
          });
      });
    </script>

    <a href="/notes">Back to Notes</a>
  </body>
</html>
